$date
	Fri Sep 26 14:59:48 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test $end
$var wire 8 ! alu_out_bus [7:0] $end
$var reg 1 " cl $end
$scope module Comp $end
$var wire 1 " clk $end
$var wire 8 # regB_out_bus [7:0] $end
$var wire 8 $ regA_out_bus [7:0] $end
$var wire 4 % pc_out_bus [3:0] $end
$var wire 8 & muxB_out_bus [7:0] $end
$var wire 9 ' im_out_bus [8:0] $end
$var wire 8 ( alu_out_bus [7:0] $end
$scope module ALU $end
$var wire 2 ) s [1:0] $end
$var wire 8 * b [7:0] $end
$var wire 8 + a [7:0] $end
$var reg 8 , out [7:0] $end
$upscope $end
$scope module IM $end
$var wire 9 - out [8:0] $end
$var wire 4 . address [3:0] $end
$upscope $end
$scope module PC $end
$var wire 1 " clk $end
$var reg 4 / pc [3:0] $end
$upscope $end
$scope module muxB $end
$var wire 1 0 c $end
$var wire 8 1 e1 [7:0] $end
$var wire 8 2 e0 [7:0] $end
$var reg 8 3 out [7:0] $end
$upscope $end
$scope module regA $end
$var wire 1 " clk $end
$var wire 8 4 data [7:0] $end
$var wire 1 5 load $end
$var reg 8 6 out [7:0] $end
$upscope $end
$scope module regB $end
$var wire 1 " clk $end
$var wire 8 7 data [7:0] $end
$var wire 1 8 load $end
$var reg 8 9 out [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 9
18
b10000011 7
b0 6
05
b10000011 4
b10000011 3
b0 2
b10000011 1
10
b0 /
b0 .
b110000011 -
b10000011 ,
b0 +
b10000011 *
b0 )
b10000011 (
b110000011 '
b10000011 &
b0 %
b0 $
b0 #
0"
b10000011 !
$end
#1
b1000110 !
b1000110 (
b1000110 ,
b1000110 4
b1000110 7
b1000110 &
b1000110 *
b1000110 3
b1000110 1
08
15
b101000110 '
b101000110 -
b1 %
b1 .
b1 /
b10000011 #
b10000011 2
b10000011 9
1"
#2
0"
#3
b10000011 &
b10000011 *
b10000011 3
b11000011 !
b11000011 (
b11000011 ,
b11000011 4
b11000011 7
b1 )
00
b10010000 1
18
05
b1000110 $
b1000110 +
b1000110 6
b10010000 '
b10010000 -
b10 %
b10 .
b10 /
1"
#4
0"
#5
b1000010 !
b1000010 (
b1000010 ,
b1000010 4
b1000010 7
b10 )
b1100000 1
08
15
b11000011 &
b11000011 *
b11000011 3
b1100000 '
b1100000 -
b11 %
b11 .
b11 /
b11000011 #
b11000011 2
b11000011 9
1"
#6
0"
#7
b101 !
b101 (
b101 ,
b101 4
b101 7
b0 )
b0 1
05
b1000010 $
b1000010 +
b1000010 6
b0 '
b0 -
b100 %
b100 .
b100 /
1"
