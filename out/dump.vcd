$date
	Sun Sep 28 17:44:17 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test $end
$var wire 8 ! alu_out_bus [7:0] $end
$var wire 1 " MuxB $end
$var wire 1 # LB $end
$var wire 1 $ LA $end
$var wire 3 % ALU_op [2:0] $end
$var reg 1 & cl $end
$scope module Comp $end
$var wire 1 & clk $end
$var wire 8 ' regB_out_bus [7:0] $end
$var wire 8 ( regA_out_bus [7:0] $end
$var wire 4 ) pc_out_bus [3:0] $end
$var wire 8 * muxB_out_bus [7:0] $end
$var wire 9 + im_out_bus [8:0] $end
$var wire 8 , alu_out_bus [7:0] $end
$scope module ALU $end
$var wire 3 - s [2:0] $end
$var wire 8 . b [7:0] $end
$var wire 8 / a [7:0] $end
$var reg 8 0 out [7:0] $end
$upscope $end
$scope module IM $end
$var wire 9 1 out [8:0] $end
$var wire 4 2 address [3:0] $end
$upscope $end
$scope module PC $end
$var wire 1 & clk $end
$var reg 4 3 pc [3:0] $end
$upscope $end
$scope module muxB $end
$var wire 1 4 c $end
$var wire 8 5 e1 [7:0] $end
$var wire 8 6 e0 [7:0] $end
$var reg 8 7 out [7:0] $end
$upscope $end
$scope module regA $end
$var wire 1 & clk $end
$var wire 8 8 data [7:0] $end
$var wire 1 9 load $end
$var reg 8 : out [7:0] $end
$upscope $end
$scope module regB $end
$var wire 1 & clk $end
$var wire 8 ; data [7:0] $end
$var wire 1 < load $end
$var reg 8 = out [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 =
1<
b10000011 ;
b0 :
09
b10000011 8
b10000011 7
b0 6
b10000011 5
14
b0 3
b0 2
b110000011 1
b10000011 0
b0 /
b10000011 .
b0 -
b10000011 ,
b110000011 +
b10000011 *
b0 )
b0 (
b0 '
0&
b0 %
0$
1#
1"
b10000011 !
$end
#1
b1000110 !
b1000110 ,
b1000110 0
b1000110 8
b1000110 ;
b1000110 *
b1000110 .
b1000110 7
1$
0#
b1000110 5
0<
19
b101000110 +
b101000110 1
b1 )
b1 2
b1 3
b10000011 '
b10000011 6
b10000011 =
1&
#2
0&
#3
b10000011 *
b10000011 .
b10000011 7
b11001001 !
b11001001 ,
b11001001 0
b11001001 8
b11001001 ;
0"
04
b1000000 5
b1000110 (
b1000110 /
b1000110 :
b1000000 +
b1000000 1
b10 )
b10 2
b10 3
1&
#4
0&
#5
b1000010 *
b1000010 .
b1000010 7
1"
14
b1000010 5
b1011 !
b1011 ,
b1011 0
b1011 8
b1011 ;
b101000010 +
b101000010 1
b11 )
b11 2
b11 3
b11001001 (
b11001001 /
b11001001 :
1&
#6
0&
#7
b10000011 *
b10000011 .
b10000011 7
b10001000 !
b10001000 ,
b10001000 0
b10001000 8
b10001000 ;
b1 %
0"
b1 -
04
b1001000 5
b1011 (
b1011 /
b1011 :
b1001000 +
b1001000 1
b100 )
b100 2
b100 3
1&
#8
0&
#9
b10 %
b10 -
b1010000 5
b10000000 !
b10000000 ,
b10000000 0
b10000000 8
b10000000 ;
b1010000 +
b1010000 1
b101 )
b101 2
b101 3
b10001000 (
b10001000 /
b10001000 :
1&
#10
0&
#11
b10000011 !
b10000011 ,
b10000011 0
b10000011 8
b10000011 ;
b11 %
b11 -
b1011000 5
b10000000 (
b10000000 /
b10000000 :
b1011000 +
b1011000 1
b110 )
b110 2
b110 3
1&
#12
0&
#13
b0 !
b0 ,
b0 0
b0 8
b0 ;
b100 %
b100 -
b1100000 5
b1100000 +
b1100000 1
b111 )
b111 2
b111 3
b10000011 (
b10000011 /
b10000011 :
1&
#14
0&
#15
b11111111 !
b11111111 ,
b11111111 0
b11111111 8
b11111111 ;
b101 %
b101 -
b1101000 5
b0 (
b0 /
b0 :
b1101000 +
b1101000 1
b1000 )
b1000 2
b1000 3
1&
#16
0&
#17
b110 %
b110 -
b1110000 5
b11111110 !
b11111110 ,
b11111110 0
b11111110 8
b11111110 ;
b1110000 +
b1110000 1
b1001 )
b1001 2
b1001 3
b11111111 (
b11111111 /
b11111111 :
1&
#18
0&
#19
b1111111 !
b1111111 ,
b1111111 0
b1111111 8
b1111111 ;
b111 %
b111 -
b1111000 5
b11111110 (
b11111110 /
b11111110 :
b1111000 +
b1111000 1
b1010 )
b1010 2
b1010 3
1&
#20
0&
#21
b11 %
0$
b11 -
b11000 5
09
b11111111 !
b11111111 ,
b11111111 0
b11111111 8
b11111111 ;
b11000 +
b11000 1
b1011 )
b1011 2
b1011 3
b1111111 (
b1111111 /
b1111111 :
1&
#22
0&
#23
1#
b10011000 5
1<
b10011000 +
b10011000 1
b1100 )
b1100 2
b1100 3
1&
#24
0&
#25
b101 !
b101 ,
b101 0
b101 8
b101 ;
b0 %
1"
b0 -
14
b10000110 5
b10000110 *
b10000110 .
b10000110 7
b110000110 +
b110000110 1
b1101 )
b1101 2
b1101 3
b11111111 '
b11111111 6
b11111111 =
1&
#26
0&
#27
b0 !
b0 ,
b0 0
b0 8
b0 ;
b10000001 *
b10000001 .
b10000001 7
b10000001 5
b101 '
b101 6
b101 =
b110000001 +
b110000001 1
b1110 )
b1110 2
b1110 3
1&
#28
0&
#29
b0 *
b0 .
b0 7
b10 %
1$
0#
0"
b10 -
04
b1010000 5
0<
19
b1010000 +
b1010000 1
b1111 )
b1111 2
b1111 3
b0 '
b0 6
b0 =
1&
#30
0&
#31
b10000011 !
b10000011 ,
b10000011 0
b10000011 8
b10000011 ;
b10000011 *
b10000011 .
b10000011 7
b0 %
0$
1#
1"
b0 -
14
b10000011 5
1<
09
b0 (
b0 /
b0 :
b110000011 +
b110000011 1
b0 )
b0 2
b0 3
1&
